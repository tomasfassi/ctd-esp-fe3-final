{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\DH\\\\Front End III\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined); //Para el theme\n\nconst themes = {\n  dark: {\n    theme: false,\n    bgColor: 'black',\n    color: 'white'\n  },\n  light: {\n    theme: true,\n    bgColor: 'white',\n    color: 'black'\n  }\n}; //Consumir Api\n\nconst initialApiState = {\n  dentistList: [],\n  dentistDetail: {}\n};\n\nconst apiReducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_DENTISTS':\n      return {\n        dentistList: action.payload,\n        dentistDetail: state.dentistDetail\n      };\n\n    case 'GET_DENTIST':\n      return {\n        dentistDetail: action.payload,\n        dentistList: state.dentistList\n      };\n  }\n};\n\nconst initialThemeState = themes.light;\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case 'SWITCH_DARK':\n      return themes.dark;\n\n    case 'SWITCH_LIGHT':\n      return themes.light;\n\n    default:\n      throw new Error();\n  }\n}; //Para los favs en el localstorage\n\n\nconst initialFavState = JSON.parse(localStorage.getItem('favs')) || [];\n\nconst favReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_FAV':\n      return [...state, action.payload];\n\n    case 'DELETE_FAV':\n      console.log('DELTE_FAV ', state);\n      console.log('DELTE_FAV payload', action.payload);\n      console.log('index of payload', state.indexOf(action.payload));\n      return state.filter(item => item != action.payload);\n\n    default:\n      throw new Error();\n  }\n};\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  //Consultar datos de la Api\n  const [dentistList, setDentistList] = useState([]);\n  const [apiState, apiDispatch] = useReducer(apiReducer, initialApiState);\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => apiDispatch({\n      type: 'GET_DENTISTS',\n      payload: data\n    }));\n  }, []); //Cambiar el theme\n\n  const [themeState, themeDispatch] = useReducer(themeReducer, initialThemeState); //Favs en el localstorage\n\n  const [favState, favDispatch] = useReducer(favReducer, initialFavState);\n  useEffect(() => {\n    localStorage.setItem('favs', JSON.stringify(favState));\n  }, [favState]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      apiState,\n      apiDispatch,\n      themeState,\n      themeDispatch,\n      favState,\n      favDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"cZjjrltbqtwnAtGzJ+xGIY9Tv9g=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useReducer","initialState","theme","data","ContextGlobal","undefined","themes","dark","bgColor","color","light","initialApiState","dentistList","dentistDetail","apiReducer","state","action","type","payload","initialThemeState","themeReducer","Error","initialFavState","JSON","parse","localStorage","getItem","favReducer","console","log","indexOf","filter","item","ContextProvider","children","setDentistList","apiState","apiDispatch","url","fetch","then","res","json","themeState","themeDispatch","favState","favDispatch","setItem","stringify","useContextGlobal"],"sources":["C:/Users/tomas/Desktop/DH/Front End III/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, useReducer } from \"react\";\r\n\r\nexport const initialState = {theme: \"\", data: []}\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\n\r\n//Para el theme\r\nconst themes = {\r\n  dark:{\r\n    theme:false,\r\n    bgColor:'black',\r\n    color: 'white'\r\n  },\r\n  light:{\r\n    theme:true,\r\n    bgColor:'white',\r\n    color: 'black'\r\n  }\r\n}\r\n\r\n//Consumir Api\r\nconst initialApiState = {dentistList:[], dentistDetail:{}}\r\nconst apiReducer = (state, action)=>{\r\n  switch(action.type){\r\n    case 'GET_DENTISTS':\r\n      return {dentistList: action.payload,dentistDetail:state.dentistDetail}\r\n    case 'GET_DENTIST':\r\n      return {dentistDetail: action.payload,dentistList: state.dentistList}\r\n  }\r\n}\r\n\r\nconst initialThemeState = themes.light\r\nconst themeReducer = (state, action) =>{\r\n  switch(action.type){\r\n    case 'SWITCH_DARK':\r\n      return themes.dark\r\n    case 'SWITCH_LIGHT':\r\n      return themes.light\r\n    default:\r\n      throw new Error\r\n  }\r\n}\r\n\r\n//Para los favs en el localstorage\r\nconst initialFavState= JSON.parse(localStorage.getItem('favs')) || []\r\nconst favReducer = (state, action) =>{\r\n  switch(action.type){\r\n    case 'ADD_FAV':\r\n      return [...state,action.payload]\r\n    case 'DELETE_FAV':\r\n      console.log('DELTE_FAV ',state)\r\n      console.log('DELTE_FAV payload',action.payload)\r\n      console.log('index of payload',state.indexOf(action.payload))\r\n      return state.filter(item=>item!=action.payload)\r\n    default:\r\n      throw new Error\r\n  }\r\n}\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  //Consultar datos de la Api\r\n  const [dentistList, setDentistList] = useState([])\r\n  const [apiState, apiDispatch] = useReducer(apiReducer, initialApiState)\r\n  const url = 'https://jsonplaceholder.typicode.com/users'\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => apiDispatch({type:'GET_DENTISTS',payload:data}))\r\n  }, [])\r\n\r\n  //Cambiar el theme\r\n  const[themeState, themeDispatch] = useReducer(themeReducer, initialThemeState)\r\n\r\n  //Favs en el localstorage\r\n  const [favState, favDispatch] = useReducer(favReducer,initialFavState)\r\n\r\n\r\n  useEffect(()=>{\r\n    localStorage.setItem('favs',JSON.stringify(favState))\r\n  },[favState])\r\n\r\n  \r\n  return (\r\n    <ContextGlobal.Provider value={{apiState, apiDispatch,themeState, themeDispatch, favState, favDispatch}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider;\r\n\r\nexport const useContextGlobal = () => useContext(ContextGlobal);"],"mappings":"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"},"metadata":{},"sourceType":"module"}